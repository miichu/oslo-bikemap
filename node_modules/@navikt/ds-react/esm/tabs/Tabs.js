var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as RadixTabs from "@radix-ui/react-tabs";
import cl from "clsx";
import React, { createContext, forwardRef } from "react";
import Tab from "./Tab";
import TabList from "./TabList";
import TabPanel from "./TabPanel";
export const TabsContext = createContext(null);
/**
 * A component that displays a set of tabs that can be used to switch between different views.
 *
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/core/tabs)
 * @see 🏷️ {@link TabsProps}
 *
 * @example
 * ```jsx
 * <Tabs defaultValue="logg">
 *   <Tabs.List>
 *     <Tabs.Tab value="logg" label="Logg" />
 *     <Tabs.Tab value="inbox" label="Inbox" />
 *     <Tabs.Tab value="sendt" label="Sendt" />
 *   </Tabs.List>
 *   <Tabs.Panel value="logg" className="h-24 w-full bg-gray-50 p-4">
 *     Logg-tab
 *   </Tabs.Panel>
 *   <Tabs.Panel value="inbox" className="h-24 w-full bg-gray-50 p-4">
 *     Inbox-tab
 *   </Tabs.Panel>
 *   <Tabs.Panel value="sendt" className="h-24  w-full bg-gray-50 p-4">
 *     Sendt-tab
 *   </Tabs.Panel>
 * </Tabs>
 * ```
 */
export const Tabs = forwardRef((_a, ref) => {
    var { className, children, onChange, size = "medium", selectionFollowsFocus = false, loop = false, iconPosition = "left" } = _a, rest = __rest(_a, ["className", "children", "onChange", "size", "selectionFollowsFocus", "loop", "iconPosition"]);
    return (React.createElement(RadixTabs.Root, Object.assign({}, rest, { ref: ref, className: cl("navds-tabs", className, `navds-tabs--${size}`), activationMode: selectionFollowsFocus ? "automatic" : "manual", onValueChange: onChange }),
        React.createElement(TabsContext.Provider, { value: {
                size,
                loop,
                iconPosition,
            } }, children)));
});
Tabs.Tab = Tab;
Tabs.List = TabList;
Tabs.Panel = TabPanel;
export default Tabs;
//# sourceMappingURL=Tabs.js.map