import React, { InputHTMLAttributes } from "react";
import { FormFieldProps } from "../useFormField";
import { SearchButtonType } from "./SearchButton";
export type SearchClearEvent = {
    trigger: "Click";
    event: React.MouseEvent<HTMLButtonElement, MouseEvent>;
} | {
    trigger: "Escape";
    event: React.KeyboardEvent<HTMLDivElement>;
};
export interface SearchProps extends Omit<FormFieldProps, "readOnly">, Omit<InputHTMLAttributes<HTMLInputElement>, "size" | "onChange"> {
    children?: React.ReactNode;
    /**
     * Search label
     * @note Will be hidden by default, is required for accessibility reasons.
     */
    label: React.ReactNode;
    /**
     * Shows label and description for screenreaders-only
     * @default true
     */
    hideLabel?: boolean;
    /**
     * Callback for value-change in input
     */
    onChange?: (value: string) => void;
    /**
     * Callback for click on clear-button or Escape keydown
     */
    onClear?: (e: SearchClearEvent) => void;
    /**
     * Callback for Search-button submit
     */
    onSearchClick?: (value: string) => void;
    /**
     * aria-label on clear button
     * @default "T√∏m"
     */
    clearButtonLabel?: string;
    /**
     * If false, removes clear-button option from input.
     * @default true
     */
    clearButton?: boolean;
    /**
     * Changes button-variant, "simple" removes button
     * @default "primary"
     */
    variant?: "primary" | "secondary" | "simple";
    /**
     * Exposes the HTML size attribute
     */
    htmlSize?: number | string;
}
interface SearchComponent extends React.ForwardRefExoticComponent<SearchProps & React.RefAttributes<HTMLDivElement>> {
    Button: SearchButtonType;
}
export interface SearchContextProps {
    disabled?: boolean;
    size: "medium" | "small";
    variant: "primary" | "secondary" | "simple";
    handleClick: () => void;
}
export declare const SearchContext: React.Context<SearchContextProps | null>;
/**
 * A component that displays a search input field.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/search)
 * @see üè∑Ô∏è {@link SearchProps}
 *
 * @example
 * ```jsx
 * <form>
 *   <Search label="S√∏k alle NAV sine sider" variant="primary" />
 * </form>
 * ```
 */
export declare const Search: SearchComponent;
export default Search;
