import React, { SetStateAction } from "react";
type FilteredOptionsContextType = {
    activeDecendantId?: string;
    allowNewValues?: boolean;
    ariaDescribedBy?: string;
    filteredOptionsRef: React.RefObject<HTMLUListElement>;
    filteredOptionsIndex: number | null;
    setFilteredOptionsIndex: (index: number) => void;
    isListOpen: boolean;
    isLoading?: boolean;
    filteredOptions: string[];
    isMouseLastUsedInputDevice: boolean;
    setIsMouseLastUsedInputDevice: React.Dispatch<SetStateAction<boolean>>;
    isValueNew: boolean;
    toggleIsListOpen: (newState?: boolean) => void;
    currentOption: string | null;
    resetFilteredOptionsIndex: () => void;
    moveFocusUp: () => void;
    moveFocusDown: () => void;
    moveFocusToInput: () => void;
    moveFocusToEnd: () => void;
    shouldAutocomplete?: boolean;
};
export declare const FilteredOptionsProvider: ({ children, value: props }: {
    children: any;
    value: any;
}) => React.JSX.Element;
export declare const useFilteredOptionsContext: () => FilteredOptionsContextType;
export {};
