var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { createContext, forwardRef } from "react";
import cl from "clsx";
import Step from "./Step";
export const StepperContext = createContext(null);
/**
 * A component that displays a stepper with clickable steps.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/stepper)
 * @see üè∑Ô∏è {@link StepperProps}
 *
 * @example
 * ```jsx
 * <>
 *   <Heading size="medium" spacing level="2" id="stepper-heading">
 *     S√∏knadssteg
 *   </Heading>
 *   <Stepper
 *     aria-labelledby="stepper-heading"
 *     activeStep={activeStep}
 *     onStepChange={(x) => setActiveStep(x)}
 *   >
 *     <Stepper.Step href="#">Start s√∏knad</Stepper.Step>
 *     <Stepper.Step href="#">Saksopplysninger</Stepper.Step>
 *     <Stepper.Step href="#">Vedlegg</Stepper.Step>
 *   </Stepper>
 * </>
 * ```
 */
export const Stepper = forwardRef((_a, ref) => {
    var { children, className, activeStep, orientation = "vertical", onStepChange = () => { }, interactive = true } = _a, rest = __rest(_a, ["children", "className", "activeStep", "orientation", "onStepChange", "interactive"]);
    activeStep = activeStep - 1;
    return (React.createElement("ol", Object.assign({}, rest, { ref: ref, className: cl("navds-stepper", orientation === "horizontal" ? "navds-stepper--horizontal" : "", className) }),
        React.createElement(StepperContext.Provider, { value: {
                activeStep,
                onStepChange,
                lastIndex: React.Children.count(children),
                orientation,
                interactive,
            } }, React.Children.map(children, (step, index) => {
            var _a, _b, _c, _d, _e;
            return (React.createElement("li", { className: cl("navds-stepper__item", {
                    "navds-stepper__item--behind": activeStep > index,
                    "navds-stepper__item--completed": React.isValidElement(step) &&
                        ((_a = step === null || step === void 0 ? void 0 : step.props) === null || _a === void 0 ? void 0 : _a.completed),
                    "navds-stepper__item--non-interactive": React.isValidElement(step) &&
                        !((_c = (_b = step === null || step === void 0 ? void 0 : step.props) === null || _b === void 0 ? void 0 : _b.interactive) !== null && _c !== void 0 ? _c : interactive),
                }), key: index + ((_e = (_d = children === null || children === void 0 ? void 0 : children.toString) === null || _d === void 0 ? void 0 : _d.call(children)) !== null && _e !== void 0 ? _e : "") },
                React.createElement("span", { className: "navds-stepper__line navds-stepper__line--1" }),
                React.isValidElement(step)
                    ? React.cloneElement(step, Object.assign(Object.assign({}, step.props), { unsafe_index: index }))
                    : step,
                React.createElement("span", { className: "navds-stepper__line navds-stepper__line--2" })));
        }))));
});
Stepper.Step = Step;
export default Stepper;
//# sourceMappingURL=Stepper.js.map