var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
import cl from "clsx";
/**
 * @deprecated Use <HGrid /> instead. <Grid /> will be removed in the future.
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/core/hgrid)
 */
export const Cell = forwardRef((_a, ref) => {
    var { children, xs, sm, md, lg, className } = _a, rest = __rest(_a, ["children", "xs", "sm", "md", "lg", "className"]);
    return (React.createElement("div", Object.assign({}, rest, { ref: ref, className: cl("navds-grid__cell", xs && `navds-grid__cell--xs-${xs}`, sm && `navds-grid__cell--sm-${sm}`, md && `navds-grid__cell--md-${md}`, lg && `navds-grid__cell--lg-${lg}`, className) }), children));
});
export default Cell;
//# sourceMappingURL=Cell.js.map