import React, { HTMLAttributes } from "react";
import { ToggleItemProps } from "./ToggleItem";
export interface ToggleGroupProps extends Omit<HTMLAttributes<HTMLDivElement>, "onChange" | "dir"> {
    /**
     * Toggles.Item elements
     */
    children: React.ReactNode;
    /**
     * Changes padding and font-size
     * @default "medium"
     */
    size?: "medium" | "small";
    /**
     * Controlled selected value
     */
    value?: string;
    /**
     * If not controlled, a default-value needs to be set
     */
    defaultValue?: string;
    /**
     * Callback for selected toggle
     */
    onChange: (value: string) => void;
    /**
     * Label describing ToggleGroup
     */
    label?: React.ReactNode;
    /**
     * Changes design and interaction-visuals
     * @default "action"
     */
    variant?: "action" | "neutral";
}
interface ToggleGroupComponent extends React.ForwardRefExoticComponent<ToggleGroupProps & React.RefAttributes<HTMLDivElement>> {
    /**
     * @see üè∑Ô∏è {@link ToggleItemProps}
     */
    Item: React.ForwardRefExoticComponent<ToggleItemProps & React.RefAttributes<HTMLButtonElement>>;
}
interface ToggleContextProps {
    size: "medium" | "small";
}
export declare const ToggleGroupContext: React.Context<ToggleContextProps | null>;
/**
 * A component that displays a group of toggle buttons.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/toggle-group)
 * @see üè∑Ô∏è {@link ToggleGroupProps}
 *
 * @example
 * ```jsx
 * <ToggleGroup defaultValue="lest" onChange={console.log} size="small">
 *   <ToggleGroup.Item value="ulest">Ulest</ToggleGroup.Item>
 *   <ToggleGroup.Item value="lest">Leste</ToggleGroup.Item>
 *   <ToggleGroup.Item value="sendt">Sendt</ToggleGroup.Item>
 * </ToggleGroup>
 * ```
 */
export declare const ToggleGroup: ToggleGroupComponent;
export default ToggleGroup;
