import React from "react";
import { DateInputProps } from "../DateInput";
import { Matcher } from "../utils";
import { MonthPickerStandaloneType } from "./MonthPickerStandalone";
export interface MonthPickerProps extends React.HTMLAttributes<HTMLDivElement> {
    /**
     * Element monthpicker anchors to. Use <MonthPicker.Input /> for built-in toggle,
     * or make your own with the open/onClose props
     */
    children?: React.ReactNode;
    /**
     * Classname for datepicker in popover
     */
    className?: string;
    /**
     * Classname for wrapper
     */
    wrapperClassName?: string;
    /**
     * The earliest month to start navigation.
     */
    fromDate?: Date;
    /**
     * The latest day to end  navigation.
     */
    toDate?: Date;
    /**
     * Changes monthpicker locale
     * @default "nb" (norsk bokm√•l)
     */
    locale?: "nb" | "nn" | "en";
    /**
     * Display dropdown for choosing year. Needs `fromDate` + `toDate` to work.
     * @default false
     */
    dropdownCaption?: boolean;
    /**
     * Apply the disabled modifier to the matching months. Uses a subset of React Day Picker Matcher type. https://react-day-picker.js.org/api/types/Matcher
     */
    disabled?: Matcher[];
    /**
     * Controlled selected-month
     */
    selected?: Date;
    /**
     * Default selected month.
     */
    defaultSelected?: Date;
    /**
     * Open state for user-controlled state. Component controlled by default
     */
    open?: boolean;
    /**
     * onClose callback for user-controlled state
     */
    onClose?: () => void;
    /**
     * onOpenToggle callback for user-controlled-state. Only called if `<MonthPicker.Input />` is used
     */
    onOpenToggle?: () => void;
    /**
     * Callback for user-controlled state
     */
    onMonthSelect?: (month?: Date) => void;
    /**
     * Used to set visible year programmatically. Component controlled by default
     */
    year?: Date;
    /**
     * Event fired when the user navigates between years.
     */
    onYearChange?: (y?: Date) => void;
    /**
     * Avoid using if possible!
     * Changes what CSS position property to use
     * You want to use "fixed" if parent wrapper has position relative, but you want popover to escape
     * @default "absolute"
     */
    strategy?: "absolute" | "fixed";
    /**
     * Bubbles Escape keydown-event up trough DOM-tree. This is set to false by default to prevent closing components like Modal on Escape
     * @default false
     */
    bubbleEscape?: boolean;
}
interface MonthPickerComponent extends React.ForwardRefExoticComponent<MonthPickerProps> {
    /**
     * @example
     * ```jsx
     * <MonthPicker.Standalone
     *   dropdownCaption
     *   fromDate={new Date("1 Oct 2020")}
     *   toDate={new Date("1 Oct 2024")}
     * />
     * ```
     */
    Standalone: MonthPickerStandaloneType;
    /**
     * Custom TextField for MonthPicker
     * @see üè∑Ô∏è {@link DateInputProps}
     */
    Input: React.ForwardRefExoticComponent<DateInputProps & React.RefAttributes<HTMLInputElement>>;
}
/**
 * A component that displays a month picker.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/monthpicker)
 * @see üè∑Ô∏è {@link MonthPickerProps}
 *
 * @example
 * ```jsx
 *  const { inputProps, monthpickerProps } = useMonthpicker({
 *    onMonthChange: console.log,
 *  });
 *
 *  return (
 *     <MonthPicker {...monthpickerProps} dropdownCaption>
 *       <MonthPicker.Input
 *         {...inputProps}
 *         label="Velg m√•ned"
 *       />
 *     </MonthPicker>
 *  );
 * ```
 */
export declare const MonthPicker: MonthPickerComponent;
export default MonthPicker;
