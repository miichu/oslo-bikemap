import React from "react";
import { ResponsiveProp, SpacingScale } from "../utilities/css";
export type BleedSpacingInline = "0" | "full" | "px" | SpacingScale;
export type BleedSpacingBlock = "0" | "px" | SpacingScale;
export interface BleedProps extends React.HTMLAttributes<HTMLDivElement> {
    /** **Negative** horizontal margin around children.
     *  Accepts a spacing token or an object of spacing tokens for different breakpoints.
     * @example
     * marginInline='4'
     * marginInline='4 5'
     * marginInline={{xs: '0 32', sm: '3', md: '4 5', lg: '5', xl: '6'}}
     */
    marginInline?: ResponsiveProp<BleedSpacingInline | `${BleedSpacingInline} ${BleedSpacingInline}`>;
    /** **Negative** vertical margin around children.
     *  Accepts a spacing token or an object of spacing tokens for different breakpoints.
     * @example
     * marginBlock='4'
     * marginBlock='4 5'
     * marginBlock={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}
     */
    marginBlock?: ResponsiveProp<BleedSpacingBlock | `${BleedSpacingBlock} ${BleedSpacingBlock}`>;
    /**
     * When true, set the padding to mirror the margin.
     * This maintains the apparent width of the element prior to adding Bleed.
     * When this is used with `asChild`, it will overwrite the padding of the child.
     */
    reflectivePadding?: boolean;
    /**
     * When true, the Bleed will render as its child. This merges classes, styles and event handlers.
     */
    asChild?: boolean;
}
/**
 * Foundational Layout-primitive for generic encapsulation & styling.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/primitives/Bleed)
 * @see üè∑Ô∏è {@link BleedProps}
 * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support
 *
 * @example
 * <Box padding="4">
 *   <Bleed marginInline="4" marginBlock="4">
 *     <BodyLong>Some content</BodyLong>
 *   </Bleed>
 * </Box>
 */
export declare const Bleed: React.ForwardRefExoticComponent<BleedProps & React.RefAttributes<HTMLDivElement>>;
