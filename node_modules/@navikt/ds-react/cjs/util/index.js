"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.composeEventHandlers = exports.useEventListener = exports.omit = exports.useClientLayoutEffect = exports.debounce = exports.mergeRefs = void 0;
const react_1 = require("react");
__exportStar(require("./OverridableComponent"), exports);
__exportStar(require("./useId"), exports);
var mergeRefs_1 = require("./mergeRefs");
Object.defineProperty(exports, "mergeRefs", { enumerable: true, get: function () { return __importDefault(mergeRefs_1).default; } });
var debounce_1 = require("./debounce");
Object.defineProperty(exports, "debounce", { enumerable: true, get: function () { return __importDefault(debounce_1).default; } });
const canUseDOM = () => {
    return (typeof window !== "undefined" &&
        typeof window.document !== "undefined" &&
        typeof window.document.createElement !== "undefined");
};
exports.useClientLayoutEffect = canUseDOM() ? react_1.useLayoutEffect : () => { };
const omit = (obj, props) => Object.entries(obj)
    .filter(([key]) => !props.includes(key))
    .reduce((obj, [key, value]) => (Object.assign(Object.assign({}, obj), { [key]: value })), {});
exports.omit = omit;
/* https://github.com/streamich/react-use/blob/master/src/useEvent.ts */
const useEventListener = (name, handler, target = typeof window !== "undefined" ? window : null) => {
    (0, react_1.useEffect)(() => {
        if (!target) {
            return;
        }
        target === null || target === void 0 ? void 0 : target.addEventListener(name, handler);
        return () => {
            target === null || target === void 0 ? void 0 : target.removeEventListener(name, handler);
        };
    }, [name, handler, target]);
};
exports.useEventListener = useEventListener;
/* https://github.com/radix-ui/primitives/blob/main/packages/core/primitive/src/primitive.tsx */
const composeEventHandlers = (originalEventHandler, ourEventHandler) => {
    return function handleEvent(event) {
        originalEventHandler === null || originalEventHandler === void 0 ? void 0 : originalEventHandler(event);
        if (!event.defaultPrevented) {
            return ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);
        }
    };
};
exports.composeEventHandlers = composeEventHandlers;
